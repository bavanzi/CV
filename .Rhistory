source("D:/projects/R-Projects/research/bavanzi_quarto/content/process_papers/process_papers.R", echo=TRUE)
source("D:/projects/R-Projects/research/bavanzi_quarto/content/process_papers/process_papers.R", echo=TRUE)
setwd("D:/projects/R-Projects/research/bavanzi_quarto/content/process_papers")
setwd("D:/projects/R-Projects/research/bavanzi_quarto")
source("D:/projects/R-Projects/research/bavanzi_quarto/content/process_papers/process_papers.R", echo=TRUE)
papers_w_cat <- read.csv("content/process_papers/papers.csv", row.names = F)
papers_w_cat <- read.csv("content/process_papers/papers.csv")
papers_w_cat
papers_w_cat %>% View
papers_w_cat <- read.csv("content/process_papers/papers_w_category.csv")
papers_w_cat %>%
mutate(yaml = sprintf('- path: "%s"\n  title: "%s"\n  authors: "%s"\n  date: "%s"\n  categories: []',
link, paper, authors, year))
papers_w_cat %>%
mutate(yaml = sprintf('- path: "%s"\n  title: "%s"\n  authors: "%s"\n  date: "%s"\n  categories: []',
link, paper, authors, year)) %>%
Vufw
papers_w_cat %>%
mutate(yaml = sprintf('- path: "%s"\n  title: "%s"\n  authors: "%s"\n  date: "%s"\n  categories: []',
link, paper, authors, year)) %>%
View
papers_w_cat %>% colnames
?read.csv
papers_w_cat <- read.csv("content/process_papers/papers_w_category.csv", check.names=F)
papers_w_cat %>% colnames
paper_cols <- colnames(papers_w_cat)
paper_cols <- paper_cols[6:length(paper_cols)]
paper_cols
apply(papers_w_cat, 1, function(x) {match(x, x[paper_cols])})
papers_w_cat %>% nrow
papers_w_cat <- read.csv("content/process_papers/papers_w_category.csv", check.names=F)
paper_cols <- colnames(papers_w_cat)
paper_cols <- paper_cols[6:length(paper_cols)]
apply(papers_w_cat, 1, function(x) {match(x, x[paper_cols])})
apply(papers_w_cat, 1, function(x) {match(x[paper_cols], x)})
paper_cols
papers_w_cat
apply(papers_w_cat, 1, function(x) {match(x[paper_cols], x)})
papers_w_cat[paper_cols]
apply(papers_w_cat, 1, function(x) {match("x", x[paper_cols])})
apply(papers_w_cat, 1, function(x) {match(x[paper_cols], "x")})
apply(apply(papers_w_cat, 1, function(x) {match(x[paper_cols], "x")}), 2, function(y) {match(1, y)})
apply(apply(papers_w_cat, 1, function(x) {match(x[paper_cols], "x")}), 1, function(y) {match(1, y)})
?apply
lapply(papers_w_cat, 1, function(x) {match(x[paper_cols], "x")})
lapply(papers_w_cat, function(x) {match(x[paper_cols], "x")})
lapply(papers_w_cat, function(x) {match("x", x[paper_cols])})
lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list(character())
cat_lst
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list(character())
for (row in 1:nrow(papers_w_cat)) {
for (cat in paper_cols) {
if (cat_match[cat][row] == 1) {
cat_lst[row] <- c(cat_lst[row], cat)
}
}
}
for (row in 1:nrow(papers_w_cat)) {
for (cat in paper_cols) {
if (cat_match[cat][row] == 1) {
cat_lst[[row]] <- c(cat_lst[[row]], cat)
}
}
}
for (row in 1:nrow(papers_w_cat)) {
for (cat in paper_cols) {
if (cat_match[cat][row] == 1) {
cat_lst[row] <- list(c(cat_lst[[row]], cat))
}
}
}
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list(character())
for (row in 1:nrow(papers_w_cat)) {
for (cat in paper_cols) {
if (cat_match[[cat]][row] == 1) {
cat_lst[row] <- list(c(cat_lst[[row]], cat))
}
}
}
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list(character())
for (row in 1:nrow(papers_w_cat)) {
if (!is.na(cat_match[[cat]][row])) {
cat_lst[row] <- list(c(cat_lst[[row]], cat))
}
cat_lst <- list(character())
for (row in 1:nrow(papers_w_cat)) {
for (cat in paper_cols) {
if (!is.na(cat_match[[cat]][row])) {
cat_lst[row] <- list(c(cat_lst[[row]], cat))
}
}
}
q
sad
123
()
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list(character())
for (row in 1:nrow(papers_w_cat)) {
for (cat in paper_cols) {
if (!is.na(cat_match[[cat]][row])) {
cat_lst[row] <- list(c(cat_lst[[row]], cat))
}
}
}
cat
cat
cat_match[[cat]]
row
cat_match[[cat]][row]
cat_lst[row]
row
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list(character())
for (row in 1:nrow(papers_w_cat)) {
for (cat in paper_cols) {
if (!is.na(cat_match[[cat]][row])) {
cat_lst[[row]] <- c(cat_lst[[row]], cat)
}
}
}
row
cat_lst[[row]]
cat_lst[row]
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list(character())
for (row in 1:nrow(papers_w_cat)) {
for (cat in paper_cols) {
if (!is.na(cat_match[[cat]][row])) {
cat_lst[row] <- c(cat_lst[row], cat)
}
}
}
warnings()
cat_lst[row]
cat_lst
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list()
for (row in 1:nrow(papers_w_cat)) {
for (cat in paper_cols) {
if (!is.na(cat_match[[cat]][row])) {
cat_lst[row] <- c(cat_lst[row], cat)
}
}
}
cat_lst
cat_match
cat_match %>% t
papers_w_cat[paper_cols]
papers_w_cat[paper_cols] %>% t()
cat_match <- lapply(papers_w_cat[paper_cols] %>% t(), function(x) {match(x, "x")})
cat_match
cat_match <- lapply(papers_w_cat[paper_cols] %>% t(), function(x) {match("x", x)})
cat_match
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_match
cat_match %>% t
cat_match
cat_match %>% as.matrix
cat_match %>% unlist
cat_match
cat_lst <- list()
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list()
for (row in 1:length(papers_w_cat)) {
cat_vec <- c()
for (cat in paper_cols) {
if (!is.na(cat_match[[cat]][row])) {
cat_vec <- c(cat_vec, cat)
}
}
cat_lst <- c(cat_vec, list(cat_vec))
}
cat_lst
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list()
for (row in 1:length(papers_w_cat)) {
cat_vec <- c()
for (cat in paper_cols) {
if (!is.na(cat_match[[cat]][row])) {
cat_vec <- c(cat_vec, cat)
}
}
cat_lst <- c(cat_vec, list(cat_vec))
}
cat_lst
row
for (row in 1:nrow(papers_w_cat)) {
cat_vec <- c()
for (cat in paper_cols) {
if (!is.na(cat_match[[cat]][row])) {
cat_vec <- c(cat_vec, cat)
}
}
cat_lst <- c(cat_vec, list(cat_vec))
}
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list()
for (row in 1:nrow(papers_w_cat)) {
cat_vec <- c()
for (cat in paper_cols) {
if (!is.na(cat_match[[cat]][row])) {
cat_vec <- c(cat_vec, cat)
}
}
cat_lst <- c(cat_vec, list(cat_vec))
}
cat_lst
nrow(papers_w_cat)
row
paper_cols
cat_match
cat_lst
cat_match <- lapply(papers_w_cat[paper_cols], function(x) {match(x, "x")})
cat_lst <- list()
for (row in 1:nrow(papers_w_cat)) {
cat_vec <- c()
for (cat in paper_cols) {
if (!is.na(cat_match[[cat]][row])) {
cat_vec <- c(cat_vec, cat)
}
}
cat_lst <- c(cat_lst, list(cat_vec))
}
cat_lst
paste(cat_lst, sep = ", ")
paste(cat_lst, sep = ", ", collapse = T)
paste(cat_lst, sep = ", ", collapse = F)
paste(cat_lst, sep = ", ")
paste0(cat_lst, sep = ", ")
paste0(cat_lst)
cat_lst
sapply(cat_lst, function(x) {paste(x, sep = ", ")})
sapply(cat_lst, function(x) {paste(x, sep = ", ", collapse = T)})
sapply(cat_lst, function(x) {paste(x, sep = ", ", collapse = ", ")})
sapply(cat_lst, function(x) {paste(x, collapse = ", ")})
paste("[", sapply(cat_lst, function(x) {paste(x, collapse = ", ")}), "]")
paste0("[", sapply(cat_lst, function(x) {paste(x, collapse = ", ")}), "]")
paper_cats <- sapply(cat_lst, function(x) {paste(x, collapse = ", ")})
papers_w_cat %>%
mutate(
yaml = sprintf('- path: "%s"\n  title: "%s"\n  authors: "%s"\n  date: "%s"\n  categories: [%s]',
link, paper, authors, year, paper_cats)
) %>%
View
papers_w_cat <- papers_w_cat %>%
mutate(
yaml = sprintf('- path: "%s"\n  title: "%s"\n  authors: "%s"\n  date: "%s"\n  categories: [%s]',
link, paper, authors, year, paper_cats)
)
# Save output
write.csv(papers_w_cat, file = "content/process_papers/papers_w_yaml.csv", row.names = F)
# Save yaml output
papers_w_cat$yaml
# Save yaml output
paste0(papers_w_cat$yaml, collapse = "\n")
# Save yaml output
paste0(papers_w_cat$yaml, collapse = "\n\n")
# Save yaml output
yaml_txt <- paste0(papers_w_cat$yaml, collapse = "\n\n")
write_delim(yaml_txt, "papers.yaml")
# Save yaml output
yaml_txt <- paste0(papers_w_cat$yaml, collapse = "\n\n")
# Save yaml output
cat(papers_w_cat$yaml, file="papers.yaml", sep="\n\n")
# Save yaml output
cat(papers_w_cat$yaml, file="content/process_papers/papers.yaml", sep="\n\n")
quarto::quarto_preview()
# Save yaml output
cat(papers_w_cat$yaml, file="content/process_papers/papers.yaml", sep="\n\n")
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview_stop()
quarto::quarto_preview()
quarto::quarto_preview()
# Save yaml output
cat(papers_w_cat$yaml, file="content/process_papers/papers.yaml", sep="\n\n")
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_publish_site()
quarto::quarto_publish_site()
quarto::quarto_preview()
serve_site()
library(blogdown)
serve_site()
